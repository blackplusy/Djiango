项目步骤:
	软件和环境的版本:公司统一
	1、代码管理:
		（1）文件夹（项目架构)
			django创建项目:电商类项目
				登录注册模块
				商品列表模块
				商品订单模块
				商品购物车模块
				支付模块
			根据订的模块做了文件夹结构
			把模板规范化
			设目录权限
		  svn局域网   github互联网
		(2)通过手段去更好地限制开发人员方法的运用，代码版本的保存
	       （3）多项目应用的时候，urls.py可以用include引用，再引用项目目录下的urls.py
	
	2、模块划分:
		（1） 前端页面:
			base.css
				.pull-right{float:right}
		(2)后端模块
			django----->二次开发框架，方法---->应用
			blog=Blog()
			blog.username=username
			blog.password=password
			blog.save()
		(3)静态资源:
			js动效
			模块:
			login.js
			function login(username,password){
				
			}
			<script src="login.js"></script>
			image:width height
			
	3、开发规范:
		(1)div必须定义width,height
		(2)如果页面两个div ,两个浮动，如果前一个浮动，后一个清除浮动
		(3)命名规范:完全没有重复的可能性
	4、合作角度：功能之间的配合
		     多考虑中间件
		    登录成功的状态很多模块使用:session
		    每个模块使用之前都要判断登陆状态
		    完成基本功能后考虑扩展和bug
		    当天功能完成，当天测试bug
		    功能测试:
		    ×××数据库考虑全面*****建议总体分析	
		    ***整个团队的环境和思想******
	5、考核:
		我考核组长:开发进度，完成度,组员的任务量
		组长给组员打分:功能完成度 bug修复度  工作量
		监督员:	 
	6、总结:做项目体验，体会

	pc端
张三:
	写底层实现提交方法，功能达到多个页面的提交，难度系数 5星
李四:
	登陆界面逻辑实现 2 
	提交界面实现  2
	收货地址实现 2
根据页面确定数据库:
	表:  user  username password email  
	    address user外键  receive_name addr  tel  zip
数据库迁移（导入和导出)
 mysqldump -u root -p 数据库名>名称.sql
 mysqldump -u root -p 数据库名 表名>名称.sql 导出数据库
   例如:mysqldump -u root -p mybook bookinfo>books.sql
 数据库导入:
	注意：扩展名为sql的文件是当前目录下，不是当前路径下的文件，写相对路径和绝对路径
	source 数据库备份的文件

    
登陆注册模块:
	1、数据模型: user  addr
		user: username password email
		addr:recevive_name tel zip address user
	注意:urls.py include来进行
	2、注册页面:
		views.py
			注册逻辑:
				接收参数
				对比两次密码是否相同，相同继续 
				判断用户名是否已存在，存在不允许注册，把错误信息返回到页面，
					弹出提示
				密码加密
				写入数据库
	3、登陆页面:
			登录的逻辑：
				接收参数
				判断密码是否为空，为空返回错误信息
				判断用户是否存在，不存在返回错误信息
				用户存在，接收的密码加密与数据库密码进行对比
				
				密码和用户都正确，登录成功进入到用户中心界面
				如果勾选了记住密码，set_cookie写入cookie
				登录成功的用户名写入session 
				(request里面session,response里面cookie)
	4、用户中心界面:
			第一个逻辑:
				登录成功，把用户名显示在网页右上角，同时有注销
			第二个逻辑:
				用户中心、购物地址、订单中心的切换
				{% if s==1 %}这种传参判断技术来控制的
			第三个逻辑:
				注销的实现:
					request.session.clear()
	5、用户收货地址界面:
			第一个逻辑:
				收货地址的添加:
					接收收货地址页面相关参数
					保存到数据库
					（注意：保存数据库存一个外键)
				默认返回，返回一个集合:
					first last取最前，最后的值
			第二个逻辑:加功能：把数据里的地址全部显示，选择当前地址
				要使用中间件，用到process_response方法
				这个方法把views里的代码写在里面
				注意:用process_response做中间件时，必须return response对
				象，否则报错，相当于服务器响应被你截掉了，没有返回
商品列表模块
	第一逻辑:分类:
			把分类全部显示，你可以把分类中order_by，显示主要的几项
	第二逻辑：商品中的显示项:
			1、利用后端的查询filter按类别把商品选出来，同时order_by排序，一般按点击率和价格进行排序，排序后用切片技术返回前端几个数据
			2、在前端页面对应的banner条下用{%for%}显示相应分类下的前几条记录

			
				


		
