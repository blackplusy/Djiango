中间键就是自己定义的一个类
	中间键的定义可以理解为过程:请求过程 urls.py  views
	固定的方法:
		process_request(self,request)
		process_view(self,request,callback) callback view里面的方法
	继承MiddlewareMixin
		(1)把输出结果写在process_request(self,request)，就会为用户访问留下日志
		(2)判断网站被爬:
		(3)判断一下url地址，对地址进行限制
登陆注册（流程图):
	两部分：本地登陆  第三方登陆
		1、先判断用户是否是本地登陆
		2、是否进行读写分离
		3、是否要有缓存技术（redis：如果用户登陆过，在redis服务器中留下key值，下次登陆就进行redis比较)
		4、是否用cookie\session来记录信息（用户名还是用户名和密码都记住)
		5、进行模型设计（读哪个表，写哪个表，redis服务器规划）
		6、进行views逻辑编写：
			（1）上传的用户名和密码，密码要不要加密(前端加，中途加,后台加) 
			 (2) 用户上传用户名和密码的过程中需要进行什么判断逻辑
				访问login时候，渲染一个页面，
				访问login_handler时候，中间需不需要中间件的支持
					中途验证码的判断
					对爬虫的判断
					对IP的判断
					对日志的补充
				注意:
					日志
			 (3)用户名和密码就会数据库获取，数据库存的密码是暗文
			 (4)用户名密码审核通过，返回一个地址:地址需要根据项目需求
			(5)1个月左右不在本网站的登录的用户会进入不活跃名单中
		7、模板的建立:
			csrf的攻击
			自己预防代码在中间件
		8、数据库
			新用户表
			活跃用户
			不活跃用户
			会员用户
			金卡用户
			黑用户
			
			
		
		
			
			
